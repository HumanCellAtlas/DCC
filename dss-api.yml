swagger: '2.0'
info:
  title: HCA DCP DSS API
  description: Human Cell Atlas Data Coordination Platform Data Storage System API
  version: "0.0.1"
host: {{API_HOST}}
schemes:
  - https
basePath: /v1
produces:
  - application/json
securityDefinitions:
  googAuth:
    type: oauth2
    flow: implicit
    authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
    x-tokenInfoUrl: https://www.googleapis.com/oauth2/v3/tokeninfo
    scopes:
      https://www.googleapis.com/auth/userinfo.email: read user email
paths:
  /search:
    get:
      description: |
        Returns a list of bundles matching the given simple criteria
      summary: Find bundles by querying their metadata using simple criteria
      operationId: dss.api.search.find
      parameters:
        - name: query
          in: query
          description: Metadata query
          required: true
          type: string
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: |
        Accepts Elasticsearch JSON query and returns matching bundle identifiers
      summary: |
        Find bundles by searching their metadata with an Elasticsearch query
      consumes:
        - application/json
      parameters:
        - name: query
          in: body
          description: Elasticsearch query
          schema:
            type: object
      produces:
        - application/json
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /files/{uuid}:
    head:
      summary: Retrieve a file's metadata given an UUID and optionally a version.
      description: |
        Given a file UUID, return the metadata for the latest version of that file.  If the version is provided, that
        version's metadata is returned instead.  The metadata is returned in the headers.
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the file.
          required: true
          type: string
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
      responses:
        200:
          description: Returns metadata
          headers:
            # edits to here should probably be reflected in the 302 section immediately below.
            X-DSS-BUNDLE-UUID:
              description: A RFC4122-compliant ID for the bundle that contains this file.
              type: string
            X-DSS-CREATOR-UID:
              description: User ID who created this file.
              type: integer
              format: int64
            X-DSS-VERSION:
              description: Timestamp of file creation in RFC3339.
              type: string
              format: date-time
            X-DSS-CONTENT-TYPE:
              description: Content-type of the file.
              type: string
            X-DSS-CRC32C:
              description: CRC-32C (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{8}$"
            X-DSS-S3-ETAG:
              description: S3 ETag (in hex format) of the file contents.
              type: string
              pattern: "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$"
            X-DSS-SHA1:
              description: SHA-1 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{40}$"
            X-DSS-SHA256:
              description: SHA-256 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{64}$"
    get:
      summary: Retrieve a file given a UUID and optionally a version.
      description: |
        Given a file UUID, return the latest version of that file.  If the version is provided, that version of the file
        is returned instead.

        Headers will contain the data store metadata for the file.

        This endpoint will do a HTTP redirect to another HTTP endpoint with the file contents.
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the file.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to fetch from.
          required: false
          type: string
          enum: [aws, gcp, azure]
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
      responses:
        302:
          description: Redirects to a signed URL with the data.
          headers:
            # edits to here should probably be reflected in the 200 section above.
            X-DSS-BUNDLE-UUID:
              description: A RFC4122-compliant ID for the bundle that contains this file.
              type: string
            X-DSS-CREATOR-UID:
              description: User ID who created this file.
              type: integer
              format: int64
            X-DSS-VERSION:
              description: Timestamp of file creation in RFC3339.
              type: string
              format: date-time
            X-DSS-CONTENT-TYPE:
              description: Content-type of the file.
              type: string
            X-DSS-CRC32C:
              description: CRC-32C (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{8}$"
            X-DSS-S3-ETAG:
              description: S3 ETag (in hex format) of the file contents.
              type: string
              pattern: "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$"
            X-DSS-SHA1:
              description: SHA-1 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{40}$"
            X-DSS-SHA256:
              description: SHA-256 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{64}$"
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments, not_found]
                required:
                  - code
    put:
      summary: Create a new version of a file
      description: |
        Create a new version of a file with a given UUID.  The file content is passed in through a cloud URL.  The file
        on the cloud provider must have metadata set reflecting the file checksums and the file content type.

        The metadata fields required are:
        - hca-dss-content-type: content-type of the file
        - hca-dss-sha256: SHA-256 checksum of the file
        - hca-dss-sha1: SHA-1 checksum of the file
        - hca-dss-s3_etag: S3 ETAG checksum of the file.  See
        https://stackoverflow.com/questions/12186993/what-is-the-algorithm-to-compute-the-amazon-s3-etag-for-a-file-larger-than-5gb
        for the general algorithm for how checksum is calculated.  For files smaller than 64MB, this is the MD5 checksum
        of the file.  For files larger than 64MB but smaller than 640,000MB, we use 64MB chunks.  For files larger than
        640,000MB, we use a chunk size equal to the total file size divided by 10000, rounded up to the nearest MB.
        MB, in this section, refers to 1,048,576 bytes.  Note that 640,000MB is not the same as 640GB!
        - hca-dss-crc32c: CRC-32C checksum of the file
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the bundle.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
        - name: extras
          in: body
          required: true
          schema:
            type: object
            properties:
              source_url:
                description: Cloud URL for source data.
                type: string
                pattern: "^(gs|s3|wasb)://"
              bundle_uuid:
                description: A RFC4122-compliant ID for the bundle that contains this file.
                type: string
              creator_uid:
                description: User ID who is creating this file.
                type: integer
                format: int64
            required:
              - source_url
              - bundle_uuid
              - creator_uid
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              version:
                description: Timestamp of file creation in RFC3339.
                type: string
                format: date-time
            required:
              - version
  /subscriptions:
    get:
      summary: Retrieve an user's event subscriptions.
      description: |
        Return a list of associated subscriptions, which contains the uuid,
        replica, query, creator_uid, and callback_url.
      operationId: dss.api.subscriptions.find
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: replica
          in: query
          description: Replica to fetch from. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              subscriptions:
                type: array
                items:
                  $ref: "#/definitions/Subscription"
            required:
              - subscriptions
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem]
                required:
                  - code
    put:
      summary: Create a event subscription.
      description: |
        Create a new event subscription. Every time a new bundle version matches this query,
        a request is sent to callback_url.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: replica
          in: query
          description: Replica to write to. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: extras
          in: body
          required: true
          schema:
            type: object
            properties:
              query:
                description: Elasticsearch query that will trigger the callback.
                type: object
              callback_url:
                description: Url to send request to when a bundle comes in that matches this query.
                type: string
                format: url # Seems that this is possible now because of https://github.com/swagger-api/swagger-core/issues/1045
            required:
              - query
              - callback_url
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              uuid:
                description: A RFC4122-compliant ID for the subscription.
                type: string
                pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
            required:
              - uuid
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem, elasticsearch_error]
                required:
                  - code
  /subscriptions/{uuid}:
    get:
      summary: Retrieve an event subscription given a UUID.
      description: |
        Given a subscription UUID, return the associated subscription, which contains the uuid,
        replica, query, creator_uid, and callback_url.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the subscription.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to fetch from. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              subscription:
                $ref: "#/definitions/Subscription"
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem, not_found]
                required:
                  - code
    delete:
      summary: Delete an event subscription.
      description: |
        Delete a registered event subscription. The associated query will no longer trigger a callback
        if a matching document is added to the system.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the subscription.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to delete from. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              timeDeleted:
                description: Timestamp of query subscription deletion in RFC3339.
                type: string
                format: date-time
            required:
              - timeDeleted
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem, not_found]
                required:
                  - code
  /bundles/{uuid}:
    get:
      summary: Retrieve a bundle given a UUID and optionally a version.
      description: |
        Given a bundle UUID, return the latest version of that bundle.  If the version is provided, that version of the
        bundle is returned instead.
      parameters:
        - name: uuid
          in: path
          description: Bundle unique ID.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of bundle creation in RFC3339.
          required: false
          type: string
          format: date-time
        - name: replica
          in: query
          description: Replica to fetch from.
          required: false
          type: string
          enum: [aws, gcp, azure]
        - name: directurls
          in: query
          description: Include direct-access URLs in the response.
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              bundle:
                $ref: "#/definitions/bundle_version"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Create a bundle
      description: |
        Create a new version of a bundle with a given UUID.  The list of file UUID+versions to be included must be
        provided.
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the bundle.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of bundle creation in RFC3339.
          required: false
          type: string
          format: date-time
        - name: replica
          in: query
          description: Replica to write to.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: extras
          in: body
          required: true
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      description: A RFC4122-compliant ID for the file.
                      type: string
                      pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
                    version:
                      description: Timestamp of file creation in RFC3339.
                      type: string
                      format: date-time
                    name:
                      description: Name of the file.
                      type: string
                      pattern: "^[^/\\\\]+$"
                    indexed:
                      description: True iff this file should be indexed.
                      type: boolean
                  required:
                    - uuid
                    - version
                    - name
                    - indexed
              creator_uid:
                description: User ID who is creating this bundle.
                type: integer
                format: int64
            required:
              - files
              - creator_uid
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              version:
                description: Timestamp of bundle creation in RFC3339.
                type: string
                format: date-time
            required:
              - version
definitions:
  File:
    type: object
    properties:
      uuid:
        type: string
        description: File unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      name:
        type: string
        description: Filename (unique within a bundle)
      versions:
        type: array
        description: List of versions
        items:
          type: string
    required:
      - uuid
      - name
      - versions
  blob_common_metadata:
    type: object
    description: Common fields between the files list of a bundle and the metadata tracking an unique file.
    properties:
      uuid:
        type: string
        description: A RFC4122-compliant ID for the file.
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      version:
        type: string
        format: date-time
        description: Timestamp of bundle creation in RFC3339.
      crc32c:
        type: string
        description: CRC-32C (in hex format) of the file contents in hex.
        pattern: "^[a-z0-9]{8}$"
      s3_etag:
        type: string
        description: S3 ETag (in hex format) of the file contents.
        pattern: "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$"
      sha1:
        type: string
        description: SHA-1 (in hex format) of the file contents in hex.
        pattern: "^[a-z0-9]{40}$"
      sha256:
        type: string
        description: SHA-256 (in hex format) of the file contents in hex.
        pattern: "^[a-z0-9]{64}$"
    required:
      - uuid
      - version
      - crc32c
      - s3_etag
      - sha1
      - sha256
  file_version:
    type: object
    description: Object describing a single file in the files list of a bundle.
    allOf:
      - $ref: '#/definitions/blob_common_metadata'
      - type: object
        properties:
          name:
            type: string
            description: Filename (unique within a bundle)
          content-type:
            type: string
            description: Content-type of the file.
          url:
            description: Direct access URL, if requested.
            type: string
        required:
          - name
          - content-type
  file_metadata:
    type: object
    description: Object describing a single file in the files list of a bundle.
    allOf:
      - $ref: '#/definitions/blob_common_metadata'
      - type: object
        properties:
          version:
            type: string
            description: Version of the file metadata object.
          bundle_uuid:
            type: string
            description: A RFC4122-compliant ID for the bundle that contains this file.
            pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          creator_uid:
            type: integer
            format: int64
            description: User ID who created this file.
        required:
          - version
          - bundle_uuid
          - creator_uid
  Bundle:
    type: object
    properties:
      uuid:
        type: string
        description: Bundle unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      versions:
        type: array
        items:
          type: string
          format: date-time
          description: Timestamp of bundle creation in RFC3339.
    required:
      - uuid
      - versions
  Subscription:
    type: object
    properties:
      uuid:
        type: string
        description: Subscription unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      replica:
        description: Replica this query is monitoring. One of aws, gcp, or azure.
        type: string
        enum: [aws, gcp, azure]
      owner:
        type: string
        format: email
        description: User who created this subscription.
      callback_url:
        description: Url to send request to when a bundle comes in that matches this query.
        type: string
      query:
        description: Elasticsearch query that will trigger the callback.
        type: object
    required:
      - uuid
      - replica
      - owner
      - callback_url
      - query
  bundle_version:
    type: object
    properties:
      uuid:
        type: string
        description: Bundle unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      version:
        type: string
        format: date-time
        description: Timestamp of bundle creation in RFC3339.
      files:
        type: array
        items:
          $ref: "#/definitions/file_version"
      creator_uid:
        type: integer
        format: int
        description: User ID who created this bundle manifest.
  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
        description: HTTP error code.
      code:
        type: string
        description: |
          Machine-readable error code.  The types of return values should not be changed lightly.  Individual endpoints
          should list an enumeration of possible return codes.  All endpoints should expect the possibility of the
          return code `unhandled_exception` and `illegal_arguments`.
      title:
        type: string
        description: Human-readable error code.
      stacktrace:
        type: string
        description: Exception stacktrace, if any.
    required:
      # once we fix up all the existing endpoints, we can add 'code' to the set of required fields.
      - title
  FilesGetResponse:
    type: object
    properties:
      files:
        type: string
