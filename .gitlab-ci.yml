image: humancellatlas/dss-build-box
# The Docker image `humancellatlas/dss-build-box` is created through a manual process from
# `${DSS_HOME}/Dockerfile.allspark`. See the contents of `${DSS_HOME}/Dockerfile.allspark`
# creation and usage instructions.

cache:
  paths:
  - chalice/.chalice/venv
  - daemons/dss-sync/.chalice/venv
  - daemons/dss-index/.chalice/venv

variables:
  GIT_SUBMODULE_STRATEGY: normal
  DSS_ES_TIMEOUT: 30
  DSS_UNITTEST_OPTS: "-v"
  TERRAFORM_APPLY_ARGS: "-auto-approve"
  GITHUB_API: "https://api.github.com"

stages:
  - test
  - integration_test
  - deploy_dev
  - release_integration
  - release_staging

before_script:
  - if not [[ CI_COMMIT_SHA == $(http GET ${GITHUB_API}/repos/HumanCellAtlas/data-store/commits sha==$CI_COMMIT_REF_NAME | jq -r '.[0]["sha"]') ]]; then exit 1; fi
# TODO: figure out how to get the gitlab-runner to not clone the repo as root - Brian H
  - cp -r /HumanCellAtlas/data-store ~/data-store && cd ~/data-store
  - virtualenv ~/venv
  - source ~/venv/bin/activate
  - pip install -r requirements-dev.txt
  - source environment
  - if [[ -f "environment.$CI_COMMIT_REF_NAME" ]]; then source "environment.$CI_COMMIT_REF_NAME"; fi

unit_tests:
  stage: test
  script:
    - whoami
    - ls -alh /
    - make -j4 parallel_test

test_search:
  stage: test
  script:
    - make -j1 tests/test_search.py

test_aws_indexer:
  stage: test
  variables:
    DSS_UNITTEST_OPTS: "-v TestAWSIndexer"
  script:
    - make -j1 tests/test_indexer.py

test_gcp_indexer:
  stage: test
  variables:
    DSS_UNITTEST_OPTS: "-v TestGCPIndexer"
  script:
    - make -j1 tests/test_indexer.py

test_subscriptions:
  stage: test
  script:
    - make -j1 tests/test_subscriptions.py

integration_test:
  stage: integration_test
  script:
    - make -j1 integration_test

deploy_dev:
  stage: deploy_dev
  script:
    - aws secretsmanager get-secret-value --secret-id ${DSS_SECRETS_STORE}/${DSS_DEPLOYMENT_STAGE}/gcp-credentials.json | jq -r .SecretString > gcp-credentials.json
    - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd -P)/gcp-credentials.json
    - make plan-infra
    - make deploy
  environment:
    name: dev
    url: https://dss.dev.data.humancellatlas.org
  only:
    - master

release_integration:
  stage: release_integration
  script:
    - git clean -df
    - git reset --hard
    - for i in $(seq 1 10); do
    -   if [[ "pending" != $(scripts/status.sh HumanCellAtlas dcp integration) ]]; then break; fi
    -   echo "waiting for DCP Integration test to complete";
    -   sleep 120;  # This loop will check status for 20 minutes and then quit
    - done
    - if [[ "success" != $(scripts/status.sh HumanCellAtlas dcp integration) ]]; then
    -   echo "DCP Integration test did not succeed";
    -   exit 1
    - fi
    - aws secretsmanager get-secret-value --secret-id ${DSS_SECRETS_STORE}/${DSS_DEPLOYMENT_STAGE}/gcp-credentials.json | jq -r .SecretString > gcp-credentials.json
    - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd -P)/gcp-credentials.json
    - make plan-infra
    - yes 1 | scripts/release.sh master integration
  environment:
    name: integration
    url: https://dss.integration.data.humancellatlas.org
  only:
    - master

release_staging:
  stage: release_staging
  script:
    - git clean -df
    - git reset --hard
    - for i in $(seq 1 10); do
    -   if [[ "pending" != $(scripts/status.sh HumanCellAtlas dcp staging) ]]; then break; fi
    -   echo "waiting for DCP Integration test to complete";
    -   sleep 120;  # This loop will check status for 20 minutes and then quit
    - done
    - if [[ "success" != $(scripts/status.sh HumanCellAtlas dcp staging) ]]; then
    -   echo "DCP Integration test did not succeed";
    -   exit 1
    - fi
    - aws secretsmanager get-secret-value --secret-id ${DSS_SECRETS_STORE}/${DSS_DEPLOYMENT_STAGE}/gcp-credentials.json | jq -r .SecretString > gcp-credentials.json
    - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd -P)/gcp-credentials.json
    - make plan-infra
    - yes 1 | scripts/release.sh integration staging
  environment:
    name: staging
    url: https://dss.staging.data.humancellatlas.org
  only:
    - integration
  when: manual 
